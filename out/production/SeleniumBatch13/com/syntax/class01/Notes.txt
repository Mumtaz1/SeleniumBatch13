Selenium Class 01

What is software testing?
-- identity the correctness and quality of the application we are working on

How many ways we can actually test?
-- manual
-- automation

When do we go for automation testing?
-- after manual testing is passed
-- when environment is stable
-- analyze our test suite and choose our automation tools

What automation tools do we know about?
-- Selenium, Cucumber, testNG, JUnit, Katalon Studio, UFT / QTP.

Levels of testing:
-- Unit testing - dev
-- Integration testing - testers
-- Acceptance testing - clients
-- System testing -- mostly done by DevOps

Types of testing:
-- Functional testing
      -- smoke regression sanity
-- Non-Functional testing
     Performance testing -- load, or stress, performance of the application in a severe load
     Security testing - how easy is your application to hack.

What is Selenium?
-- Is a set of tools which helps us to automate web applications. It is mainly used to
   perform functional testing.

Selenium Components:
. Selenium IDE -- integrated development environment
- Selenium Grid -- Firefox plugin
- Selenium WebDriver
- Selenium RC -- Remote Control

What is Selenium WebDriver?
Open source automation tool which allows us to perform actions on a web applications.
WebDriver is an interface.

Advantages of Selenium Webdriver:
-- Open source tool
-- Works on different browsers and supports cross browser testing.
-- Works with different OS (operating systems) - OS independent - iOS, Windows, Linux
-- Supports different programming languages - Java, JavaScript, Ruby, Python.

Disadvantages of Selenium WebDriver:
-- Cannot test desktop applications.
-- No technical support
-- No built-in reports
-- Cannot test images, videos, and captchas (captchas are pictures to verify if you are a robot or not)

get() vs navigate()
-- navigate can go back, forward, and refresh
-- get() will wait for the page to fully load whereas navigate() will not wait.
-- get() will not keep the history of the browser whereas navigate() will.

close() vs quit()
-- close() closes the current tab
-- quit() closes the whole browser

fullscreen() vs maximize()
-- maximize() will maximize the browser and you will still be able to see the control
   panel (back, forward, bookmarks).
-- fullscreen() will maximize the whole web page. So you can't see the control panel,
   (back, forward, bookmarks).
