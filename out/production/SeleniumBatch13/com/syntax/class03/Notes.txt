Selenium Class 3:

Why do we need Xpath and CSS Selector?
    -- Developers may not provide all the locators in HTML.
    -- By using xpath and css we can identify elements with ANY given attributes.

What is an Xpath?
    -- xpath is like a query language which helps us to identify elements
       uniquely on the web page.

Types of Xpath:
    1. Absolute Xpath --> starts from the starting node of the HTML. It
       always starts with a single slash (/)
       e.g., /html/body/div/div/div
    2. Relative Xpath --> starts from any node in the HTML. It will
       always start with double slash (//).

Syntax for relative xpath:
   //tagname[@attribute = 'attribute value']
   Example: //input[@id='email']

Identifying elements by its text:
    //tagname[text() = 'text value']
    e.g., //a[text() = 'Create new account']
          //h2[text() = 'Connect with friends and the world around you on Facebook'.]

Identifying elements by using contains method:
    //tagname[contains(@attribute, 'partial attribute value')]
    e.g., //input[contains(@placeholder, 'Email')]
    e.g., //h2[contains(text(), 'the world')]

starts-with will identify elements by its partial starting value
    //tagname[starts-with(@attribute, 'partial starting attribute value')]
    e.g., //input[starts-with(@aria-label, 'Email')]

ends-with was used in xpath 1.0. We are using v2.0 and this method is NOT available.

Advanced Xpath:
    Is based on parent and child, sibling relationships.

Identifying element by following sibling
    //tagname[@attribute = 'attribute value']/following-sibling::siblingTagname
    e.g., //input[@id = 'calFromDate']/following-sibling::img
    e.g., //label[@for = 'leaveList_calFromDate']/following-sibling::img

Identifying element by preceding sibling
    //tagname[@attribute = 'attribute value']/preceding-sibling :: siblingTagname
    e.g //span[text() = '& Orders']/preceding-sibling :: span

Identifying elements by its parent
    //tagname[@attribute = 'attribute value']/parent::parentTagname
    //span[text() = '&Order']/parent::a

Identifying elements by its ancestors:
    //input@id = 'email'/ancestor::form

Identifying elements by its index:
    (//img[@class = 'ui-datepicker-trigger'])[2]

HW:
Navigate to http://syntaxprojects.com
Click on start practicing
click on simple form demo
enter any text on first text box
click on show message
quit the browser






